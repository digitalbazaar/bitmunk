# The top-level Makefile that is used to build the Bitmunk software.
prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@

# Setup variables needed for source distribution

# setup conditional GTK subdirs
ifeq (@BUILD_GTK_UI@,yes)
GTKUI_SUBDIR = cpp/gtkui
GTKUI_MODULE = bmgtkui
GTKUI_TEST_MODULES = bmtest-gtkbuilder
endif

FLASH_SUBDIRS := cpp/apps/bitmunk
EXECUTABLE_SUBDIRS := \
	cpp/tests

SUBDIRS := \
	cpp/common \
	cpp/app \
	cpp/protocol \
	cpp/node \
	cpp/nodemodule \
	cpp/data \
	cpp/bfp \
	cpp/peruserdb \
	cpp/portmapper \
	cpp/purchase \
	cpp/sell \
	cpp/system \
	cpp/negotiate \
	cpp/filebrowser \
	cpp/customcatalog \
	cpp/medialibrary \
	cpp/webui \
	cpp/eventreactor \
	cpp/eventreactor-downloadstate \
	$(GTKUI_SUBDIR) \
	cpp/test \
	cpp/apps/bitmunk \
	cpp/apps/bfp-file-id \
	cpp/apps/format-detect \
	cpp/apps/tester \
	$(EXECUTABLE_SUBDIRS)

INSTALL_APPLICATIONS := \
	dist/bin/bitmunk

INSTALL_BASE_LIBS := \
	dist/lib/libbmcommon.so \
	dist/lib/libbmprotocol.so \
	dist/lib/libbmapp.so \
	dist/lib/libbmnode.so

INSTALL_BASE_CONFIGS := \
	configs/live.d/events.config \
	configs/live.d/login.config \
	configs/live.d/node.config

INSTALL_BASE_MODS := \
	dist/lib/libbitmunk.so \
	dist/lib/libbmnodemodule.so

INSTALL_SYSTEM_MOD_CONFIGS := \
	configs/live.d/bitmunk.system.System.config

INSTALL_SYSTEM_MODS := \
	dist/lib/libbmsystem.so

ifndef PRINT_DIRECTORIES
PRINT_DIRECTORIES_OPTS = --no-print-directory -s
endif
ifdef PRINT_COMMANDS
PRINT_COMMANDS_OPTS = PRINT_COMMANDS=$(PRINT_COMMANDS)
endif
# Maximum load is the number of CPU cores + 1
MAX_LOAD = $(shell (if [ -e /proc/cpuinfo ]; then (cat /proc/cpuinfo | grep -i ^processor && echo processor) | wc -l; else echo 2; fi))
MAKE_JOB_OPTS ?= -j -l $(MAX_LOAD).0

MAKE_CMD = $(PRINT_COMMANDS_OPTS) $(MAKE) $(MAKE_JOB_OPTS) $(PRINT_DIRECTORIES_OPTS)
MAKE_DIR = $(PRINT_COMMANDS_OPTS) $(MAKE_CMD) -C $(dir)

# Which platform we're building for
BUILD_FOR_LINUX=@BUILD_FOR_LINUX@
BUILD_FOR_WINDOWS=@BUILD_FOR_WINDOWS@
BUILD_FOR_MACOS=@BUILD_FOR_MACOS@

# The Bitmunk node modules
COMMON_MODULES = \
	bmnodemodule \
	bmsystem \
	bmbfp \
	bmnegotiate \
	bmsell

BPE_MODULES = \
	$(COMMON_MODULES) \
	bmperuserdb \
	bmpurchase \
	bmfilebrowser \
	bmcustomcatalog \
	bmmedialibrary \
	bmeventreactor \
	bmeventreactor-downloadstate \
	bmwebui \
	bmportmapper \
	$(GTKUI_MODULE) \
	$(ADMIN_MODULE) 

APP_MODULES = \
	bfp-file-id \
	bitmunk \
	format-detect \
	profile-creator

TEST_MODULES = \
	bmbitmunk-unit-tests \
	bmtest-common \
	bmtest-config \
	bmtest-customcatalog \
	bmtest-download-states \
	bmtest-eventreactor \
	bmtest-node-services \
	bmtest-peerbuy \
	bmtest-piece-upload \
	bmtest-services-filesystem \
	bmtest-services-customcatalog \
	bmtest-services-medialibrary \
	bmtest-statemonitor \
	$(GTKUI_TEST_MODULES)

LIBS_DIR = @BITMUNK_DIR@/dist/lib
BIN_DIR = @BITMUNK_DIR@/dist/bin
MODULES_DIR = @BITMUNK_DIR@/dist/modules

MODULE_FILES += $(patsubst %,$(MODULES_DIR)/bpe/@LIB_PREFIX@%.@DYNAMIC_LIB_EXT@, $(BPE_MODULES))
MODULE_FILES += $(patsubst %,$(MODULES_DIR)/apps/@LIB_PREFIX@%.@DYNAMIC_LIB_EXT@, $(APP_MODULES))
MODULE_FILES += $(patsubst %,$(MODULES_DIR)/tests/@LIB_PREFIX@%.@DYNAMIC_LIB_EXT@, $(TEST_MODULES))

.PHONY: all verbose clean test internal-docs clean-docs link-monarch-libs link-monarch-bins

all: link-monarch-libs link-monarch-bins
	@$(foreach dir,$(SUBDIRS),IGNORE_DEPENDENCIES=true $(MAKE_DIR) build-headers &&) true
	@$(foreach dir,$(SUBDIRS),$(MAKE_DIR) build-objects build-libraries &&) true
	@$(foreach dir,$(EXECUTABLE_SUBDIRS),$(MAKE_DIR) build-executables &&) true
	@$(foreach dir,$(FLASH_SUBDIRS),$(MAKE_DIR) build-flash &&) true
	@$(foreach dir,$(SUBDIRS),$(MAKE_DIR) build-extra &&) true
	@$(MAKE_CMD) link-modules

clean:
	@rm -rf build
	@rm -rf dist
	@echo "Removed all objects, libraries and modules."

link-monarch-libs:
	@mkdir -p $(LIBS_DIR)
	@ln -sf @MONARCH_DIR@/dist/lib/* $(LIBS_DIR)

link-monarch-bins:
	@mkdir -p $(BIN_DIR)
ifeq ($(BUILD_FOR_WINDOWS),yes)
	@ln -sf @MONARCH_DIR@/dist/bin/monarch.exe $(BIN_DIR)/bitmunk.exe
else
	@ln -sf @MONARCH_DIR@/dist/bin/monarch $(BIN_DIR)/bitmunk
endif

link-modules: $(MODULE_FILES)

$(MODULE_FILES):
	@mkdir -p $(@D)
	@ln -sf $(LIBS_DIR)/$(@F) $@

# Note: When building for multiple archs this will see all the tests and
#       will likely fail for non-current archs.  This method is used since
#       it will work for single arch builds and is difficult to know which
#       arch to specify otherwise.
test: all
	./bitmunk-run test

clean-docs:
	rm -rf docs/bitmunk-api-@BITMUNK_MAJORMINOR@

external-docs: docs/bitmunk-@FULL_DOTTED_VERSION@.tar.bz2
	@echo "Decompressing external bitmunk-@FULL_DOTTED_VERSION@ source distribution..."
	@rm -rf docs/bitmunk-api-@BITMUNK_MAJORMINOR@
	@rm -rf docs/bitmunk-@FULL_DOTTED_VERSION@
	@cd docs && tar jxf bitmunk-@FULL_DOTTED_VERSION@.tar.bz2
	@mkdir -p docs/bitmunk-api-@BITMUNK_MAJORMINOR@
	@echo "Generating external C++ API documentation..."
	@cd docs/bitmunk-@FULL_DOTTED_VERSION@ && doxygen ../../setup/external-docs.doxygen

rest-api-docs:
	@rm -rf docs/bitmunk-rest-api
	@./setup/restdoc.py `git ls-files | grep Service.cpp` -o docs/rest-api

verbose:
	PRINT_DIRECTORIES=true $(MAKE) all

verbose-commands:
	PRINT_DIRECTORIES=true PRINT_COMMANDS=true $(MAKE) all

valgrind:
	./bitmunk-valgrind dist/bin/bitmunk-unit-tests

packages:
ifeq (@BUILD_FIREFOX_PLUGIN@,yes)
	@make -C cpp/apps/firefox clean
	@make -C cpp/apps/firefox all
else
	@echo "Building Debian packages..."
	@rm -f debian
	@rm -f installers/packages/*
	@ln -s installers/debian debian
	@LD_LIBRARY_PATH=libs/@BITMUNK_PLATFORM@/ dpkg-buildpackage -us -uc -rfakeroot -b 
	@echo "Moving packages to installers/packages..."
	@rm ../bitmunk@BITMUNK_VERSION_MAJOR@*changes
	@mkdir -p installers/packages
	@mv ../bitmunk@BITMUNK_VERSION_MAJOR@*deb installers/packages
endif

install: install-base

install-base:
	@mkdir -p $(PREFIX)@BITMUNK_SYSTEM_CONFIG_DIR@
	@mkdir -p $(PREFIX)@BITMUNK_MODULES_DIR@
	@mkdir -p $(PREFIX)@sysconfdir@/init.d
	@mkdir -p $(PREFIX)@bindir@
	@mkdir -p $(PREFIX)@libdir@
	@mkdir -p $(PREFIX)@datadir@/bitmunk@BITMUNK_VERSION_MAJOR@/templates

	@echo "Installing bitmunk@BITMUNK_VERSION_MAJOR@ executables in $(PREFIX)@bindir@..."
	@$(foreach app,$(INSTALL_APPLICATIONS),install -m 755 $(app) $(PREFIX)@bindir@/$(notdir $(app))@BITMUNK_VERSION_MAJOR@ &&) true

	@echo "Installing bitmunk@BITMUNK_VERSION_MAJOR@ base libraries in $(PREFIX)@libdir@..."
	@$(foreach lib,$(INSTALL_BASE_LIBS),install -m 644 $(lib) $(PREFIX)@libdir@/$(notdir $(lib)) &&) true

	@echo "Installing bitmunk@BITMUNK_VERSION_MAJOR@ base configs in $(PREFIX)@BITMUNK_SYSTEM_CONFIG_DIR@..."
	@install -m 644 $(INSTALL_BASE_CONFIG) $(PREFIX)@BITMUNK_SYSTEM_CONFIG@
	@install -m 644 $(INSTALL_BASE_CONFIGS) $(PREFIX)@BITMUNK_SYSTEM_CONFIG_DIR@

	@echo "Installing bitmunk@BITMUNK_VERSION_MAJOR@ base templates in $(PREFIX)@datadir@/bitmunk@BITMUNK_VERSION_MAJOR@/templates..."
	@install -m 644 templates/*tpl $(PREFIX)@datadir@/bitmunk@BITMUNK_VERSION_MAJOR@/templates

	@echo "Installing bitmunk@BITMUNK_VERSION_MAJOR@ base modules in $(PREFIX)@BITMUNK_MODULES_DIR@..."
	@$(foreach lib,$(INSTALL_BASE_MODS),install -m 644 $(lib) $(PREFIX)@BITMUNK_MODULES_DIR@/$(notdir $(lib)) &&) true

install-system:
	@mkdir -p $(PREFIX)@BITMUNK_SYSTEM_CONFIG_DIR@
	@mkdir -p $(PREFIX)@BITMUNK_MODULES_DIR@
	@echo "Installing bitmunk@BITMUNK_VERSION_MAJOR@ system configs in $(PREFIX)@BITMUNK_SYSTEM_CONFIG_DIR@..."
	@$(foreach conf,$(INSTALL_SYSTEM_MOD_CONFIGS),install -m 644 $(conf) $(PREFIX)@BITMUNK_SYSTEM_CONFIG_DIR@/$(notdir $(conf)) &&) true
	@echo "Installing bitmunk@BITMUNK_VERSION_MAJOR@ system modules in $(PREFIX)@BITMUNK_MODULES_DIR@..."
	@$(foreach lib,$(INSTALL_SYSTEM_MODS),install -m 644 $(lib) $(PREFIX)@BITMUNK_MODULES_DIR@/$(notdir $(lib)) &&) true
